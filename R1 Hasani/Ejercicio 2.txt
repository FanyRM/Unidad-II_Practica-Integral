//De acuerdo a los siguientes Objetos:

//Clase tienda {Tienda(ubicacion,nombre,horario).}
class Tienda {
  String ubicacion;
  String nombre_tienda;
  String horario;

  Tienda(this.ubicacion, this.nombre_tienda, this.horario);

  Map<String, dynamic> toMap() {
    return {
      'ubicacion': ubicacion,
      'nombre_tienda': nombre_tienda,
      'horario': horario,
    };
  }
}

//Producto(Nombre,cantidad,precio,existencia),
class Producto extends Tienda {
  String nombre;
  int cantidad;
  double precio;
  int existencia;

  Producto(this.nombre, this.cantidad, this.precio, this.existencia,
      String ubicacion, String nombre_tienda, String horario)
      : super(ubicacion, nombre_tienda, horario);

  @override
  Map<String, dynamic> toMap() {
    final map = super.toMap();
    map.addAll({
      'nombre': nombre,
      'cantidad': cantidad,
      'precio': precio,
      'existencia': existencia,
    });
    return map;
  }
}

//Pedido(nombre_producto,tiempo_entrega, cantidad, costoTotal),
class Pedido extends Producto {
  String nombre_producto;
  String tiempo_entrega;
  int cantidad_pedido;
  double costoTotal;

  Pedido(
      this.nombre_producto,
      this.tiempo_entrega,
      this.cantidad_pedido,
      this.costoTotal,
      String nombre,
      int cantidad,
      double precio,
      int existencia,
      String ubicacion,
      String nombre_tienda,
      String horario)
      : super(nombre, cantidad, precio, existencia, ubicacion, nombre_tienda,
            horario);
  @override
  Map<String, dynamic> toMap() {
    final map = super.toMap();
    map.addAll({
      'nombre_producto': nombre_producto,
      'tiempo_entrega': tiempo_entrega,
      'cantidad_pedido': cantidad_pedido,
      'costoTotal': costoTotal,
    });
    return map;
  }
}
//Ejercicio 3-realizar un ejemplo con dart,aplicando métodos de filtrado de datos maps con stream, los filtros deben de ser, búsqueda por producto, búsqueda por tienda, calcular el costo total de un pedido y numero de productos, listar al menos 25 objetos.

Future<void> listaPedidos(List<Map<String, dynamic>> pedidos) async {
  await Future.delayed(Duration(seconds: 1)); //Para esperar datos, el await indica una espera, se parece un monton a type porque es como una espera de una promesa
  for(var pedido in pedidos) {
    print(pedido);
  }
  
}

void main() {
  //Ejercicio 2- realizar un ejemplo con dart, aplicando mapas con herencia de objetos, listado de métodos con una lista de mapas, aplicar método Future listando al menos 20 objetos.

  List<Pedido> list = [
    Pedido("Laptop", "3 días", 5, 62500.0, "Asus Pro", 5, 12500.0, 10,
        "Almacén Central", "Electrónica Artic", "9 AM - 7 PM"),
    Pedido("Laptop", "7 días", 6, 63000.0, "Lenovo NIXU", 6, 10500.0, 10,
        "Almacén Central", "Guayabo Gamer", "9 AM - 7 PM"),
    Pedido("Consola de videojuegos", "7 días", 3, 1500.0, "PlayStation 5", 3,
        500.0, 5, "Sucursal Norte", "Gamer Zone", "10 AM - 9 PM"),
    Pedido("Impresora", "3 días", 4, 800.0, "HP LaserJet", 4, 200.0, 30,
        "Sucursal Oeste", "Guayabo Gamer", "9 AM - 5 PM"),
    Pedido("Laptop", "16 días", 10, 125000.0, "Asus Gamer", 10, 12500.0, 18,
        "Almacén Central", "El rincon del friki", "9 AM - 7 PM"),
    Pedido("Cámara", "4 días", 7, 2800.0, "Canon EOS", 7, 400.0, 20,
        "Sucursal Este", "Gamer Zone", "9 AM - 7 PM"),
    Pedido("Consola de videojuegos", "7 días", 3, 22500.0, "XBOX", 3, 7500.0, 5,
        "Sucursal Norte", "El rincon del friki", "10 AM - 9 PM"),
    Pedido("Tablet", "2 días", 6, 1800.0, "iPad Air", 6, 300.0, 25,
        "Almacén Principal", "Gamer Zone", "9 AM - 8 PM"),
    Pedido("Laptop", "6 días", 10, 145000.0, "HP Elite", 10, 14500.0, 18,
        "Almacén Central", "Guayabo Games", "9 AM - 7 PM"),
    Pedido("Auriculares", "1 día", 20, 1000.0, "Sony WH-1000XM4", 20, 50.0, 100,
        "Sucursal Sur", "Guayabo Games", "8 AM - 5 PM"),
    
  Pedido("Monitor", "4 días", 8, 3200.0, "Samsung 27\"", 8, 400.0, 15,
      "Sucursal Norte", "Electrónica Artic", "9 AM - 7 PM"),
  Pedido("Smartphone", "2 días", 12, 96000.0, "iPhone 13 Pro", 12, 8000.0, 12,
      "Sucursal Sur", "Guayabo Gamer", "9 AM - 7 PM"),
  Pedido("Teclado", "3 días", 15, 2250.0, "Logitech G213", 15, 150.0, 50,
      "Sucursal Oeste", "Gamer Zone", "9 AM - 5 PM"),
  Pedido("Mouse", "1 día", 18, 1800.0, "Razer DeathAdder", 18, 100.0, 75,
      "Almacén Central", "El rincon del friki", "9 AM - 7 PM"),
  Pedido("Tablet", "5 días", 7, 2100.0, "Samsung Galaxy Tab S7", 7, 300.0, 20,
      "Almacén Principal", "Electrónica Artic", "9 AM - 8 PM"),
  Pedido("Cámara", "3 días", 5, 3500.0, "Nikon D3500", 5, 700.0, 10,
      "Sucursal Este", "Guayabo Games", "9 AM - 7 PM"),
  Pedido("Consola de videojuegos", "7 días", 4, 20000.0, "Nintendo Switch", 4, 5000.0, 5,
      "Sucursal Norte", "Gamer Zone", "10 AM - 9 PM"),
  Pedido("Auriculares", "2 días", 10, 1500.0, "Bose QuietComfort 35", 10, 150.0, 50,
      "Sucursal Sur", "Electrónica Artic", "8 AM - 5 PM"),
  Pedido("Laptop", "3 días", 9, 108000.0, "Dell XPS 13", 9, 12000.0, 18,
      "Almacén Central", "Guayabo Gamer", "9 AM - 7 PM"),
  Pedido("Impresora", "4 días", 6, 1200.0, "Canon PIXMA", 6, 200.0, 30,
      "Sucursal Oeste", "El rincon del friki", "9 AM - 5 PM")
  ];
  
  //Listar en mapa la lista anterior
  List<Map<String, dynamic>> listaMapas = list.map((p) => p.toMap()).toList();
  
  listaPedidos(listaMapas);
}